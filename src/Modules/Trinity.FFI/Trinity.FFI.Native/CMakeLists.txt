CMAKE_MINIMUM_REQUIRED(VERSION 3.0.0)
MESSAGE(STATUS "Cmake version ${CMAKE_VERSION}")

INCLUDE_DIRECTORIES(./)
file(GLOB_RECURSE SRCS ./*.cpp)

IF(UNIX) 
    MESSAGE(STATUS "Build on Unix/Linux") 
    ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS -DUNICODE -D_UNICODE)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fpermissive -Wall -std=c++14 -Wno-write-strings -Wno-unknown-pragmas -pthread")
ENDIF()

IF(WIN32) 
    MESSAGE(STATUS "Build on Windows")
    ADD_DEFINITIONS(-DWIN32 -D_WINDOWS -D_CRT_SECURE_NO_WARNINGS -DUNICODE -D_UNICODE)
    SET(COMPILE_DEFINITIONS  "WIN32;NDEBUG;_WINDOWS;_USRDLL;TRINITYC_EXPORTS;_CRT_SECURE_NO_WARNINGS")
    SET(CMAKE_CXX_FLAGS "/volatile:iso /EHa /fp:except- /Zi /Gy /Oi /Ot /Ob2 /MP /Oy /O2 /MT /GS- /W3")
    SET(CMAKE_CXX_FLAGS_RELEASE "/GL")
    SET(CMAKE_SHARED_LINKER_FLAGS "/LTCG /OPT:REF /OPT:ICF /SUBSYSTEM:WINDOWS")
    LINK_LIBRARIES(Psapi.lib;ws2_32.lib;Dbghelp.lib)
ENDIF()

ADD_LIBRARY(Trinity.FFI.Native SHARED ${SRCS})
